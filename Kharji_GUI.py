from PyQt5 import QtCore, QtGui, QtWidgets
import pandas as pd
import numpy as np
import time
from PyQt5.QtWidgets import QWidget
class Ui_window(object):
    def setupUi(self, window):
        self.window_delete = Ui_delete_data(self)
        self.window_stores = Ui_stores(self)
        self.window_goods = Ui_goods(self)
        self.window_price = Ui_price(self)
        self.window_dateTime = Ui_dateTime(self)
        # open file data csv
        self.all_data=self.read_or_build_file_data()
        window.setObjectName("window")
        window.resize(919, 606)
        self.show = QtWidgets.QWidget(window)
        self.show.setGeometry(QtCore.QRect(280, 0, 641, 611))
        self.show.setObjectName("show")
        self.sort_dataTime = QtWidgets.QPushButton(self.show)
        self.sort_dataTime.setGeometry(QtCore.QRect(472, 0, 151, 31))
        self.sort_dataTime.setObjectName("sort_dataTime")
        self.sort_dataPrice = QtWidgets.QPushButton(self.show)
        self.sort_dataPrice.setGeometry(QtCore.QRect(322, 0, 151, 31))
        self.sort_dataPrice.setObjectName("sort_dataPrice")
        self.sort_dataGoods = QtWidgets.QPushButton(self.show)
        self.sort_dataGoods.setGeometry(QtCore.QRect(172, 0, 151, 31))
        self.sort_dataGoods.setObjectName("sort_dataGoods")
        self.sort_dataSrores = QtWidgets.QPushButton(self.show)
        self.sort_dataSrores.setGeometry(QtCore.QRect(22, 0, 151, 31))
        self.sort_dataSrores.setObjectName("sort_dataSrores")
        self.data_table = QtWidgets.QTableWidget(self.show)
        self.data_table.setGeometry(QtCore.QRect(0, 30, 641, 502))
        self.data_table.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.data_table.setMouseTracking(False)
        self.data_table.setAutoFillBackground(False)
        self.data_table.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.data_table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.data_table.setAutoScroll(True)
        self.data_table.setAutoScrollMargin(20)
        self.data_table.setEditTriggers(QtWidgets.QAbstractItemView.SelectedClicked)
        self.data_table.setTabKeyNavigation(False)
        self.data_table.setProperty("showDropIndicator", False)
        self.data_table.setDragDropOverwriteMode(False)
        self.data_table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.data_table.setIconSize(QtCore.QSize(0, 0))
        self.data_table.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.data_table.setShowGrid(True)
        self.data_table.setGridStyle(QtCore.Qt.DashLine)
        self.data_table.setWordWrap(True)
        self.data_table.setCornerButtonEnabled(True)
        self.data_table.setRowCount(20)
        self.data_table.setColumnCount(5)
        self.data_table.setObjectName("data_table")
        item = QtWidgets.QTableWidgetItem()
        self.data_table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.data_table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.data_table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.data_table.setHorizontalHeaderItem(3, item)
        self.data_table.horizontalHeader().setVisible(False)
        self.data_table.horizontalHeader().setCascadingSectionResizes(False)
        self.data_table.horizontalHeader().setDefaultSectionSize(150)
        self.data_table.horizontalHeader().setHighlightSections(True)
        self.data_table.horizontalHeader().setMinimumSectionSize(57)
        self.data_table.verticalHeader().setVisible(True)
        self.data_table.verticalHeader().setDefaultSectionSize(25)
        self.data_table.verticalHeader().setMinimumSectionSize(20)
        self.label_total_price = QtWidgets.QLabel(self.show)
        self.label_total_price.setGeometry(QtCore.QRect(290, 540, 141, 20))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_total_price.setFont(font)
        self.label_total_price.setObjectName("label_total_price")
        self.total_price = QtWidgets.QTextBrowser(self.show)
        self.total_price.setGeometry(QtCore.QRect(440, 540, 171, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.total_price.setFont(font)
        self.total_price.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.total_price.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.total_price.setObjectName("total_price")
        self.delete_single_data = QtWidgets.QPushButton(self.show)
        self.delete_single_data.setGeometry(QtCore.QRect(10, 540, 81, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.delete_single_data.setPalette(palette)
        self.delete_single_data.setObjectName("delete_single_data")
        self.desk = QtWidgets.QWidget(window)
        self.desk.setGeometry(QtCore.QRect(0, 0, 281, 611))
        self.desk.setObjectName("desk")
        self.label_user_name = QtWidgets.QLabel(self.desk)
        self.label_user_name.setGeometry(QtCore.QRect(0, 20, 81, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(114, 159, 207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(114, 159, 207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(114, 159, 207))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        self.label_user_name.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_user_name.setFont(font)
        self.label_user_name.setAutoFillBackground(False)
        self.label_user_name.setTextFormat(QtCore.Qt.AutoText)
        self.label_user_name.setScaledContents(False)
        self.label_user_name.setWordWrap(False)
        self.label_user_name.setOpenExternalLinks(False)
        self.label_user_name.setObjectName("label_user_name")
        self.groupBox_set = QtWidgets.QGroupBox(self.desk)
        self.groupBox_set.setGeometry(QtCore.QRect(0, 50, 281, 231))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.PlaceholderText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.NoBrush)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.PlaceholderText, brush)
        self.groupBox_set.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_set.setFont(font)
        self.groupBox_set.setFocusPolicy(QtCore.Qt.NoFocus)
        self.groupBox_set.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.groupBox_set.setAutoFillBackground(True)
        self.groupBox_set.setLocale(QtCore.QLocale(QtCore.QLocale.Persian, QtCore.QLocale.Iran))
        self.groupBox_set.setInputMethodHints(QtCore.Qt.ImhNone)
        self.groupBox_set.setFlat(False)
        self.groupBox_set.setObjectName("groupBox_set")
        self.label_stores = QtWidgets.QLabel(self.groupBox_set)
        self.label_stores.setGeometry(QtCore.QRect(0, 40, 81, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_stores.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_stores.setFont(font)
        self.label_stores.setAutoFillBackground(False)
        self.label_stores.setTextFormat(QtCore.Qt.AutoText)
        self.label_stores.setScaledContents(False)
        self.label_stores.setWordWrap(False)
        self.label_stores.setOpenExternalLinks(False)
        self.label_stores.setObjectName("label_stores")
        self.label_goode = QtWidgets.QLabel(self.groupBox_set)
        self.label_goode.setGeometry(QtCore.QRect(0, 80, 41, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_goode.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_goode.setFont(font)
        self.label_goode.setAutoFillBackground(False)
        self.label_goode.setTextFormat(QtCore.Qt.AutoText)
        self.label_goode.setScaledContents(False)
        self.label_goode.setWordWrap(False)
        self.label_goode.setOpenExternalLinks(False)
        self.label_goode.setObjectName("label_goode")
        self.label_price = QtWidgets.QLabel(self.groupBox_set)
        self.label_price.setGeometry(QtCore.QRect(0, 120, 101, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_price.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_price.setFont(font)
        self.label_price.setAutoFillBackground(False)
        self.label_price.setTextFormat(QtCore.Qt.AutoText)
        self.label_price.setScaledContents(False)
        self.label_price.setWordWrap(False)
        self.label_price.setOpenExternalLinks(False)
        self.label_price.setObjectName("label_price")
        self.set_dateTime = QtWidgets.QDateEdit(self.groupBox_set)
        self.set_dateTime.setGeometry(QtCore.QRect(70, 150, 111, 31))
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.set_dateTime.setFont(font)
        self.set_dateTime.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.set_dateTime.setDateTime(QtCore.QDateTime(QtCore.QDate(2001, 1, 1), QtCore.QTime(0, 0, 0)))
        self.set_dateTime.setObjectName("set_dateTime")

        # set date now for "set_dateTime" object
        self.set_date_now()
        
        self.set_dateTime.userDateChanged['QDate'].connect(self.set_checked_date_now)

        self.label_dateTime = QtWidgets.QLabel(self.groupBox_set)
        self.label_dateTime.setGeometry(QtCore.QRect(0, 160, 51, 21))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_dateTime.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_dateTime.setFont(font)
        self.label_dateTime.setAutoFillBackground(False)
        self.label_dateTime.setTextFormat(QtCore.Qt.AutoText)
        self.label_dateTime.setScaledContents(False)
        self.label_dateTime.setWordWrap(False)
        self.label_dateTime.setOpenExternalLinks(False)
        self.label_dateTime.setObjectName("label_dateTime")
        self.set_dateTimeNow = QtWidgets.QCheckBox(self.groupBox_set)
        self.set_dateTimeNow.setGeometry(QtCore.QRect(190, 158, 71, 23))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(46, 52, 54))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.set_dateTimeNow.setPalette(palette)
        self.set_dateTimeNow.setCheckable(True)
        self.set_dateTimeNow.setChecked(True)
        self.set_dateTimeNow.setObjectName("set_dateTimeNow")
        self.set_saveButton = QtWidgets.QPushButton(self.groupBox_set)
        self.set_saveButton.setGeometry(QtCore.QRect(200, 190, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.set_saveButton.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.set_saveButton.setFont(font)
        self.set_saveButton.setObjectName("set_saveButton")
        self.set_resetButton = QtWidgets.QPushButton(self.groupBox_set)
        self.set_resetButton.setGeometry(QtCore.QRect(90, 190, 101, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.set_resetButton.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.set_resetButton.setFont(font)
        self.set_resetButton.setObjectName("set_resetButton")
        self.set_stores = QtWidgets.QLineEdit(self.groupBox_set)
        self.set_stores.setGeometry(QtCore.QRect(90, 40, 181, 25))
        self.set_stores.setObjectName("set_stores")

        # show complater all set stores
        completer=self.get_groups_completer('stores')
        self.set_stores.setCompleter(completer)

        self.set_goods = QtWidgets.QLineEdit(self.groupBox_set)
        self.set_goods.setGeometry(QtCore.QRect(90, 80, 181, 25))
        self.set_goods.setObjectName("set_goods")

        # show complater all set goods
        completer=self.get_groups_completer('goods')
        self.set_goods.setCompleter(completer)

        self.set_goods = QtWidgets.QLineEdit(self.groupBox_set)
        self.set_goods.setGeometry(QtCore.QRect(90, 80, 181, 25))
        self.set_goods.setObjectName("set_goods")
        self.set_price = QtWidgets.QSpinBox(self.groupBox_set)
        self.set_price.setGeometry(QtCore.QRect(110, 120, 161, 26))
        self.set_price.setLocale(QtCore.QLocale(QtCore.QLocale.English, QtCore.QLocale.UnitedStates))
        self.set_price.setMaximum(1000000000)
        self.set_price.setObjectName("set_price")
        self.groupBox_search = QtWidgets.QGroupBox(self.desk)
        self.groupBox_search.setGeometry(QtCore.QRect(0, 290, 281, 61))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(52, 101, 164))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(52, 101, 164))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.groupBox_search.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.groupBox_search.setFont(font)
        self.groupBox_search.setFocusPolicy(QtCore.Qt.NoFocus)
        self.groupBox_search.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.groupBox_search.setAutoFillBackground(True)
        self.groupBox_search.setLocale(QtCore.QLocale(QtCore.QLocale.Persian, QtCore.QLocale.Iran))
        self.groupBox_search.setInputMethodHints(QtCore.Qt.ImhNone)
        self.groupBox_search.setFlat(False)
        self.groupBox_search.setObjectName("groupBox_search")
        self.search_column_handle = QtWidgets.QComboBox(self.groupBox_search)
        self.search_column_handle.setGeometry(QtCore.QRect(60, 30, 131, 25))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.search_column_handle.setFont(font)
        self.search_column_handle.setObjectName("search_column_handle")
        self.search_column_handle.addItem("")
        self.search_column_handle.addItem("")
        self.search_column_handle.addItem("")
        self.search_column_handle.addItem("")
        self.label_column_handle = QtWidgets.QLabel(self.groupBox_search)
        self.label_column_handle.setGeometry(QtCore.QRect(0, 30, 51, 20))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.label_column_handle.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_column_handle.setFont(font)
        self.label_column_handle.setObjectName("label_column_handle")
        self.search_button = QtWidgets.QPushButton(self.groupBox_search)
        self.search_button.setGeometry(QtCore.QRect(200, 30, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.search_button.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.search_button.setFont(font)
        self.search_button.setObjectName("search_button")
        self.user_name = QtWidgets.QLineEdit(self.desk)
        self.user_name.setGeometry(QtCore.QRect(90, 20, 111, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(239, 41, 41))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        self.user_name.setPalette(palette)
        self.user_name.setObjectName("user_name")

        # show complater all user names
        completer=self.get_groups_completer('user')
        self.user_name.setCompleter(completer)

        self.show_data_username = QtWidgets.QPushButton(self.desk)
        self.show_data_username.setGeometry(QtCore.QRect(200, 20, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.show_data_username.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.show_data_username.setFont(font)
        self.show_data_username.setObjectName("show_data_username")
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(117, 80, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(117, 80, 123))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(190, 190, 190))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)

        self.retranslateUi(window)
        self.set_resetButton.clicked.connect(self.set_dateTime.clear)
        self.set_dateTimeNow.clicked['bool'].connect(self.set_date_now)
        self.set_saveButton.clicked.connect(self.get_data)
        self.set_resetButton.clicked.connect(self.set_price.clear)
        # set coler for undifund object input
        self.set_price.valueChanged.connect(lambda:self.set_coler_white(self.set_price))
        self.set_resetButton.clicked.connect(self.set_goods.clear)
        # set coler for undifund object input
        self.set_goods.textChanged['QString'].connect(lambda:self.set_coler_white(self.set_goods))
        self.set_resetButton.clicked.connect(self.set_stores.clear)
        # set coler for undifund object input
        self.set_stores.textChanged['QString'].connect(lambda:self.set_coler_white(self.set_stores))
        # delet single item from table and data csv
        self.delete_single_data.clicked.connect(self.ensure_removal)
        self.show_data_username.clicked.connect(lambda:self.show_data_on_table('user'))
        # set coler for undifund object input
        self.user_name.textChanged['QString'].connect(lambda:self.set_coler_white(self.user_name))
        self.data_table.itemDoubleClicked['QTableWidgetItem*'].connect(self.delete_single_data.showMenu)
        self.sort_dataSrores.clicked.connect(lambda:self.sort_data_show('stores'))
        self.sort_dataGoods.clicked.connect(lambda:self.sort_data_show('goods'))
        self.sort_dataPrice.clicked.connect(lambda:self.sort_data_show('price'))
        self.sort_dataTime.clicked.connect(lambda:self.sort_data_show('date'))
        self.search_button.clicked.connect(self.chaenged_search_title)
        QtCore.QMetaObject.connectSlotsByName(window)

    def retranslateUi(self, window):
        _translate = QtCore.QCoreApplication.translate
        window.setWindowTitle(_translate("window", "Form"))
        self.sort_dataTime.setText(_translate("window", "تاریخ"))
        self.sort_dataPrice.setText(_translate("window", "قیمت(تومان)"))
        self.sort_dataGoods.setText(_translate("window", "کالا"))
        self.sort_dataSrores.setText(_translate("window", "فروشگاه"))
        self.data_table.setSortingEnabled(False)
        item = self.data_table.horizontalHeaderItem(0)
        item.setText(_translate("window", "فروشگاه"))
        item = self.data_table.horizontalHeaderItem(1)
        item.setText(_translate("window", "کالا"))
        item = self.data_table.horizontalHeaderItem(2)
        item.setText(_translate("window", "قیمت(تومان)"))
        item = self.data_table.horizontalHeaderItem(3)
        item.setText(_translate("window", "تاریخ"))
        __sortingEnabled = self.data_table.isSortingEnabled()
        self.data_table.setSortingEnabled(False)
        self.data_table.setSortingEnabled(__sortingEnabled)
        self.label_total_price.setText(_translate("window", ": خرج کل این جدول"))
        self.delete_single_data.setText(_translate("window", "حذف داده"))
        self.label_user_name.setText(_translate("window", ": نام کاربر"))
        self.groupBox_set.setTitle(_translate("window", "افزودن خرج :"))
        self.label_stores.setText(_translate("window", ": فروشگاه"))
        self.label_goode.setText(_translate("window", ": کالا"))
        self.label_price.setText(_translate("window", ": قیمت(تومان)"))
        self.label_dateTime.setText(_translate("window", ":  تاریخ"))
        self.set_dateTimeNow.setText(_translate("window", "امروز"))
        self.set_saveButton.setText(_translate("window", "‌‌ذخیره"))
        self.set_resetButton.setText(_translate("window", "بازیابی فرم"))
        self.groupBox_search.setTitle(_translate("window", "یافتن خرج :"))
        self.search_column_handle.setItemText(0, _translate("window", "فروشگاه"))
        self.search_column_handle.setItemText(1, _translate("window", "کالا"))
        self.search_column_handle.setItemText(2, _translate("window", "قیمت(تومان)"))
        self.search_column_handle.setItemText(3, _translate("window", "تاریخ")) 
        self.label_column_handle.setText(_translate("window", ": دسته"))
        self.search_button.setText(_translate("window", "محدوده"))
        self.show_data_username.setText(_translate("window", "نمایش")) 

    '''
    backend KharjOBarj :)>
    '''
    def read_or_build_file_data(self):
        try:
            df=pd.read_csv('KharjOBarjDataBase.csv')
        except FileNotFoundError:
            df=pd.DataFrame([],columns=['user','stores','goods','price','date'])
        return df

    def show_data_on_table(self,groupName):
        if groupName=='user':
            try:
                if self.user_name.text()=='':
                    palette = QtGui.QPalette()
                    brush = QtGui.QBrush(QtGui.QColor(203, 14, 45))
                    brush.setStyle(QtCore.Qt.SolidPattern)
                    palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
                    self.user_name.setPalette(palette)
                    return
                else:self.data_grouped=self.all_data.groupby(groupName).get_group(self.user_name.text())
            except KeyError:self.data_grouped=self.all_data
        elif groupName=='stores':
            try:self.data_grouped=self.all_data.loc[self.all_data['stores'].str.contains(self.stores_search, case=False)]
            except KeyError:self.data_grouped=self.all_data
        elif groupName=='goods':
            try:self.data_grouped=self.all_data.loc[self.all_data['goods'].str.contains(self.goods_search, case=False)]
            except KeyError:self.data_grouped=self.all_data
        elif groupName=='price':
            try:
                indexs=self.all_data.get('price').loc[int(self.price_search_start)<=self.all_data['price']].loc[self.all_data['price']<=int(self.price_search_end)].index
                self.data_grouped=self.all_data.take(indexs)
            except KeyError:self.data_grouped=self.all_data
        elif groupName=='date':
            try:
                dateTimes=pd.to_datetime(self.all_data.get('date'))
                indexs=dateTimes.loc[pd.to_datetime(self.dateTime_search_start)<=dateTimes].loc[dateTimes<=pd.to_datetime(self.dateTime_search_end)].index
                self.data_grouped=self.all_data.take(indexs)
            except KeyError:self.data_grouped=self.all_data

        numrow=self.data_grouped.shape[0]
        self.data_table.setRowCount(self.data_grouped.shape[0])
        for row in range(0,numrow):
            for column in range(0,4):
                self.data_table.setItem(row,column,QtWidgets.QTableWidgetItem(str(self.data_grouped.iat[row,column+1])))
        self.total_price.clear()
        self.total_price.append(str(self.data_grouped.get('price').astype(int).sum()))

    # set date now for set_dateTime object
    def set_date_now(self):
        if self.set_dateTime.text()!=time.strftime("%Y-%m-%d"):
            qdate=QtCore.QDate.fromString(time.strftime("%Y-%m-%d"), "yyyy-MM-dd")
            self.set_dateTime.setDate(qdate)
        else:self.set_dateTimeNow.setChecked(False)

    def set_checked_date_now(self):
        if self.set_dateTime.text()==time.strftime("%Y-%m-%d"):self.set_dateTimeNow.setChecked(True) 
        else:self.set_dateTimeNow.setChecked(False)

    # get data for add from front
    def get_data(self):
        status=False
        if self.user_name.text()=='':
            palette = QtGui.QPalette()
            brush = QtGui.QBrush(QtGui.QColor(203, 14, 45))
            brush.setStyle(QtCore.Qt.SolidPattern)
            palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
            self.user_name.setPalette(palette)
            status=True
        if self.set_stores.text()=='':
            palette = QtGui.QPalette()
            brush = QtGui.QBrush(QtGui.QColor(203, 14, 45))
            brush.setStyle(QtCore.Qt.SolidPattern)
            palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
            self.set_stores.setPalette(palette)
            status=True
        if self.set_goods.text()=='':
            palette = QtGui.QPalette()
            brush = QtGui.QBrush(QtGui.QColor(203, 14, 45))
            brush.setStyle(QtCore.Qt.SolidPattern)
            palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
            self.set_goods.setPalette(palette)
            status=True
        if self.set_price.text()=='0' or self.set_price.text()=='':
            palette = QtGui.QPalette()
            brush = QtGui.QBrush(QtGui.QColor(203, 14, 45))
            brush.setStyle(QtCore.Qt.SolidPattern)
            palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
            self.set_price.setPalette(palette)
            status=True
        if status:return    
        single_data=np.array([[self.user_name.text(),self.set_stores.text(),self.set_goods.text(),int(self.set_price.text()),pd.to_datetime(self.set_dateTime.text()).date()]])
        self.add_data(single_data)

    def add_data(self,single_data):
        single_data=pd.DataFrame(single_data,columns=['user','stores','goods','price','date'])
        self.all_data=self.all_data.append(single_data,ignore_index=True)
        self.write_change_data()

    def write_change_data(self):
        self.all_data.to_csv('KharjOBarjDataBase.csv',index=False)
        self.show_data_on_table('user')

    # set color white before change value undefined
    def set_coler_white(self,set_data):
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255,255,255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        set_data.setPalette(palette)

    def get_groups_completer(self,groupName):
        data_grouped=self.all_data.groupby(groupName)
        groups=[]
        for sym,gro in data_grouped:groups.append(sym)
        return QtWidgets.QCompleter(groups)  

    def chaenged_search_title(self):
        if self.search_column_handle.currentText()=='فروشگاه':self.window_stores.show()
        if self.search_column_handle.currentText()=='کالا':self.window_goods.show()
        if self.search_column_handle.currentText()=='قیمت(تومان)':self.window_price.show()
        if self.search_column_handle.currentText()=='تاریخ':self.window_dateTime.show() 

    def close(self):
        self.window_delete.close()
        self.window_dateTime.close()
        self.window_price.close()
        self.window_goods.close()
        self.window_stores.close()
        super(Ui_window, self).close()

    def get_data_from_other_windows(self,froms,data1,data2=None):
        if froms=='stores':
            self.stores_search=data1
            self.show_data_on_table('stores')
        elif froms=='goods':
            self.goods_search=data1
            self.show_data_on_table('goods')
        elif froms=='price':
            self.price_search_start=data1
            self.price_search_end=data2
            self.show_data_on_table('price')
        elif froms=='dateTime':
            self.dateTime_search_start=data1
            self.dateTime_search_end=data2
            self.show_data_on_table('date')

    def sort_data_show(self,columnName):
        self.data_grouped=self.all_data.sort_values(by=columnName)
        self.show_data_on_table(None)

    def ensure_removal(self):self.window_delete.show()

    def delete_data(self):
        index_=self.data_grouped.take([self.data_table.currentRow()]).index
        self.data_grouped=self.data_grouped.drop(index_,axis=0)
        self.all_data=self.all_data.drop(index_,axis=0)
        self.write_change_data()
        self.show_data_on_table(None)

class Ui_stores(QWidget):
    def __init__(self, parent):
        super(Ui_stores, self).__init__()
        self.setObjectName("stores")
        self.setWindowModality(QtCore.Qt.WindowModal)
        self.resize(280, 102)
        self.label_stores = QtWidgets.QLabel(self)
        self.label_stores.setGeometry(QtCore.QRect(0, 20, 111, 21))
        self.label_stores.setObjectName("label_stores")
        self.Name_stores = QtWidgets.QLineEdit(self)
        self.Name_stores.setGeometry(QtCore.QRect(130, 20, 131, 25))
        self.Name_stores.setObjectName("Name_stores")
        
        # open file data csv in parent
        parent.all_data=parent.read_or_build_file_data()
        # show complater all user names
        completer=parent.get_groups_completer('stores')
        self.Name_stores.setCompleter(completer)
        
        self.search_data = QtWidgets.QPushButton(self)
        self.search_data.setGeometry(QtCore.QRect(188, 60, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.search_data.setPalette(palette)
        self.search_data.setObjectName("search_data")

        self.search_data.clicked.connect(lambda:self.search(parent))

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, stores):
        _translate = QtCore.QCoreApplication.translate
        stores.setWindowTitle(_translate("stores", "stores"))
        self.label_stores.setText(_translate("stores", ": نام فروشگاه"))
        self.search_data.setText(_translate("stores", "جستجو"))

    def search(self,parent):
        parent.get_data_from_other_windows('stores',self.Name_stores.text())
        self.close()
class Ui_goods(QWidget):
    def __init__(self, parent):
        super(Ui_goods, self).__init__()
        self.setObjectName("goods")
        self.resize(280, 102)
        self.label_goods = QtWidgets.QLabel(self)
        self.label_goods.setGeometry(QtCore.QRect(0, 20, 111, 21))
        self.label_goods.setObjectName("label_goods")
        self.Name_goods = QtWidgets.QLineEdit(self)
        self.Name_goods.setGeometry(QtCore.QRect(130, 20, 131, 25))
        self.Name_goods.setObjectName("Name_goods")

        # open file data csv in parent
        parent.all_data=parent.read_or_build_file_data()
        # show complater all user names
        completer=parent.get_groups_completer('goods')
        self.Name_goods.setCompleter(completer)

        self.search_data = QtWidgets.QPushButton(self)
        self.search_data.setGeometry(QtCore.QRect(190, 60, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.search_data.setPalette(palette)
        self.search_data.setObjectName("search_data")

        self.search_data.clicked.connect(lambda:self.search(parent))

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, goods):
        _translate = QtCore.QCoreApplication.translate
        goods.setWindowTitle(_translate("goods", "goods"))
        self.label_goods.setText(_translate("goods", ": نام کالا"))
        self.search_data.setText(_translate("goods", "جستجو"))

    def search(self,parent):
        parent.get_data_from_other_windows('goods',self.Name_goods.text())
        self.close()
class Ui_price(QWidget):
    def __init__(self, parent):
        super(Ui_price, self).__init__()
        self.setObjectName("price")
        self.resize(280, 110)
        self.label_price = QtWidgets.QLabel(self)
        self.label_price.setGeometry(QtCore.QRect(0, 20, 111, 31))
        self.label_price.setObjectName("label_price")
        self.end_price = QtWidgets.QSpinBox(self)
        self.end_price.setGeometry(QtCore.QRect(130, 40, 131, 26))
        self.end_price.setMaximum(1000000000)
        self.end_price.setObjectName("end_price")
        self.start_price = QtWidgets.QSpinBox(self)
        self.start_price.setGeometry(QtCore.QRect(130, 10, 131, 26))
        self.start_price.setMaximum(1000000000)
        self.start_price.setObjectName("start_price")
        self.search_price = QtWidgets.QPushButton(self)
        self.search_price.setGeometry(QtCore.QRect(190, 80, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.search_price.setPalette(palette)
        self.search_price.setObjectName("search_price")

        self.search_price.clicked.connect(lambda:self.search(parent))        

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, price):
        _translate = QtCore.QCoreApplication.translate
        price.setWindowTitle(_translate("price", "price"))
        self.label_price.setText(_translate("price", ": محدوده قیمت"))
        self.search_price.setText(_translate("goods", "جستجو"))


    def search(self,parent):
        parent.get_data_from_other_windows('price',self.start_price.text(),self.end_price.text())
        self.close()
class Ui_dateTime(QWidget):
    def __init__(self, parent):
        super(Ui_dateTime, self).__init__()
        self.setObjectName("dateTime")
        self.resize(303, 108)
        self.label_dateTime = QtWidgets.QLabel(self)
        self.label_dateTime.setGeometry(QtCore.QRect(0, 20, 91, 31))
        self.label_dateTime.setObjectName("label_dateTime")
        self.dateEdit_start = QtWidgets.QDateEdit(self)
        self.dateEdit_start.setGeometry(QtCore.QRect(100, 10, 131, 26))
        self.dateEdit_start.setObjectName("dateEdit_start")
        self.dateEdit_end = QtWidgets.QDateEdit(self)
        self.dateEdit_end.setGeometry(QtCore.QRect(100, 40, 131, 26))
        self.dateEdit_end.setObjectName("dateEdit_end")

        # set date now for "dateEdit_end" object
        self.set_date_now()

        self.dateTimeNow = QtWidgets.QCheckBox(self)
        self.dateTimeNow.setGeometry(QtCore.QRect(240, 40, 61, 23))
        self.dateTimeNow.setObjectName("dateTimeNow")
        self.dateTimeNow.setCheckable(True)
        self.dateTimeNow.setChecked(True)
        self.search_date = QtWidgets.QPushButton(self)
        self.search_date.setGeometry(QtCore.QRect(160, 80, 71, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 226, 52))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.search_date.setPalette(palette)
        self.search_date.setObjectName("search_date")

        self.dateTimeNow.clicked['bool'].connect(self.set_date_now)
        self.search_date.clicked.connect(lambda:self.search(parent))
        self.dateEdit_end.userDateChanged['QDate'].connect(self.set_checked_date_now)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, dateTime):
        _translate = QtCore.QCoreApplication.translate
        dateTime.setWindowTitle(_translate("dateTime", "dateTime"))
        self.label_dateTime.setText(_translate("dateTime", ": محدوده تاریخ"))
        self.dateTimeNow.setText(_translate("dateTime", "امروز"))
        self.search_date.setText(_translate("dateTime", "جستجو"))

    # set date now for set_date_now object
    def set_date_now(self):
        if self.dateEdit_end.text()!=time.strftime("%Y-%m-%d"):
            qdate=QtCore.QDate.fromString(time.strftime("%Y-%m-%d"), "yyyy-MM-dd")
            self.dateEdit_end.setDate(qdate)
        else:self.dateTimeNow.setChecked(False)

    def set_checked_date_now(self):
        if self.dateEdit_end.text()==time.strftime("%Y-%m-%d"):self.dateTimeNow.setChecked(True) 
        else:self.dateTimeNow.setChecked(False)

    def search(self,parent):
        parent.get_data_from_other_windows('dateTime',self.dateEdit_start.text(),self.dateEdit_end.text())
        self.close()
class Ui_delete_data(QWidget):
    def __init__(self, parent):
        super(Ui_delete_data, self).__init__()
        self.setObjectName("delete_data")
        self.resize(299, 99)
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(10, 10, 271, 41))
        self.label.setObjectName("label")
        self.Yes = QtWidgets.QPushButton(self)
        self.Yes.setGeometry(QtCore.QRect(170, 60, 89, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(115, 210, 22))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.Yes.setPalette(palette)
        self.Yes.setObjectName("Yes")
        self.No = QtWidgets.QPushButton(self)
        self.No.setGeometry(QtCore.QRect(50, 60, 89, 25))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(204, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        self.No.setPalette(palette)
        self.No.setObjectName("No")

        self.Yes.clicked.connect(lambda:self.status(parent,'yes'))
        self.No.clicked.connect(lambda:self.status(parent,'no'))

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, delete_data):
        _translate = QtCore.QCoreApplication.translate
        delete_data.setWindowTitle(_translate("delete_data", "Form"))
        self.label.setText(_translate("delete_data", "مطمئنید که میخواهید این داده را حذف کنید؟"))
        self.Yes.setText(_translate("delete_data", "بله"))
        self.No.setText(_translate("delete_data", "خیر"))


    def status(self,parent,statused):
        if statused=='yes':parent.delete_data()  
        self.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    window = QtWidgets.QWidget()
    ui = Ui_window()
    ui.setupUi(window)
    window.show()
    sys.exit(app.exec_())
